{"version":3,"sources":["components/ImgMediaCard.js","components/NoInfo.js","components/ErrorMessages.js","App.js","serviceWorker.js","index.js","myAvatar.png"],"names":["withStyles","card","maxWidth","media","objectFit","props","classes","name","react_default","a","createElement","Card_default","className","CardActionArea_default","CardMedia_default","component","height","image","myAvatar","title","CardContent_default","Typography_default","gutterBottom","variant","NoInfo","NoCity","style","color","DOC_ID","theme","createMuiTheme","typography","useNextVariants","App","state","location","accquainted","persons","cities","componentDidMount","GetSheetDone","labeledCols","then","sheet","_this","setState","data","raw","handleChange","event","Object","defineProperty","target","value","checkAccquainted","_this$state","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","person","toLowerCase","console","log","err","return","this","_this$state2","root","wrapper","Paper_default","paper","Grid_default","container","wrap","spacing","onSubmit","handleFormSubit","form","FormControl_default","formControl","TextField_default","label","margin","onChange","Select_default","id","displayEmpty","MenuItem_default","map","city","index","key","Button_default","button","onClick","length","ErrorMessages_NoCity","components_ImgMediaCard","components_NoInfo","Component","overflow","padding","concat","unit","width","minWidth","styles","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.873f7351.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport myAvatar from '../myAvatar.png';\r\n\r\nconst styles = {\r\n  card: {\r\n    maxWidth: 400,\r\n  },\r\n  media: {\r\n    // ⚠️ object-fit is not supported by IE11.\r\n    objectFit: 'cover',\r\n  },\r\n};\r\n\r\nfunction ImgMediaCard(props) {\r\n  const { classes, name } = props;\r\n  return (\r\n    <Card className={classes.card}>\r\n      <h4>Hello {name}! Nice to meet you</h4>\r\n      <CardActionArea>\r\n  \r\n        <CardMedia\r\n          component=\"img\"\r\n          className={classes.media}\r\n          height=\"400\"\r\n          image={myAvatar}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"headline\" component=\"h2\">\r\n            Vu Nguyen\r\n          </Typography>\r\n          <Typography component=\"p\">\r\n            Country : Finland\r\n          </Typography>\r\n          <Typography component=\"p\">\r\n            Zalo : <strong>+358 442048050</strong>\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      \r\n    </Card>\r\n  );\r\n}\r\n\r\nImgMediaCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ImgMediaCard);","import React from 'react';\r\n\r\n\r\nfunction NoInfo(props){\r\n    return (\r\n        <div>\r\n            <h4>Xin lỗi ! Bạn không nằm trong danh sách được biết số đt của mình. Vui lòng gõ có dấu đúng tên và thành phố.</h4>\r\n            <p>Đúng : \"Huyền Trang\" hoặc \"HuyềnTrang\"</p>\r\n            <p>Sai : Huyen Trang</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoInfo;","import React from 'react';\r\n\r\nexport const NoCity = ()=>{\r\n    return (\r\n        <div>\r\n            <h4 style={{\"color\": \"red\"}}>Không load được thành phố, vui lòng refresh lại cả trang !</h4>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport PropTypes from 'prop-types';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport ImgMediaCard from './components/ImgMediaCard';\r\nimport NoInfo from './components/NoInfo';\r\nimport {NoCity} from './components/ErrorMessages';\r\n// import {cities, database} from './db';\r\nimport GetSheetDone from 'get-sheet-done';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst DOC_ID = '1_4pP2I8ordpGL3L_9hpAp0G1K3OhhYnfTNYrWtrXemM';\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n});\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    overflow: 'hidden',\r\n    padding: `0 ${theme.spacing.unit * 3}px`,\r\n  },\r\n  wrapper: {\r\n    maxWidth: 400,\r\n    margin: \"0 auto\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing.unit,\r\n    padding: theme.spacing.unit * 2,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n  },\r\n  formControl: {\r\n    minWidth: 120,\r\n    margin: \"0 auto\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n});\r\n\r\nclass App extends Component {\r\n  state={\r\n    name: '',\r\n    location: '',\r\n    accquainted: null,\r\n    persons: [],\r\n    cities: [],\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const PersonsSheetNum = 1 ;\r\n    const CitiesSheetNum = 2;\r\n\r\n    GetSheetDone.labeledCols(DOC_ID, PersonsSheetNum).then(sheet=> {\r\n      this.setState({persons : sheet.data});\r\n    })\r\n\r\n    GetSheetDone.raw(DOC_ID, CitiesSheetNum).then(sheet=> {\r\n      this.setState({cities: sheet.data[0]});\r\n    })\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  checkAccquainted = () => {\r\n    const {name, location, persons} = this.state;\r\n    let accquainted = null;\r\n    for(let person of persons){\r\n      if(name.toLowerCase() === person.name.toLowerCase() && location === person.location) {\r\n        console.log(\"I know this person\");\r\n        accquainted = true;\r\n      }\r\n    }\r\n\r\n    if(accquainted){\r\n      this.setState({accquainted}) ;\r\n    } else {\r\n      this.setState({accquainted: false});\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const {accquainted, cities} = this.state ;\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"\">\r\n          <h4>Bạn hãy điền vào thông tin, nếu đúng thì mình sẽ đưa số đt của mình cho bạn</h4>\r\n        </header>\r\n        <main className={classes.root}>\r\n          <div className={classes.wrapper}>\r\n            <Paper className={classes.paper}>\r\n              <Grid container wrap=\"nowrap\" spacing={16}>\r\n                {/* <Input value={this.state.name} onChange={(event)=>{this.handleInputChange(event)}}/> */}\r\n                <form onSubmit={this.handleFormSubit} className={classes.form}>\r\n                  <FormControl className={classes.formControl}>\r\n                    <TextField value={this.state.name} name=\"name\" label=\"Tên của bạn trên Ymeetme\" margin=\"normal\" onChange={this.handleChange}></TextField>\r\n                    <Select\r\n                      value={this.state.location}\r\n                      onChange={this.handleChange}\r\n                      name=\"location\"\r\n                      id=\"location\"\r\n                      displayEmpty\r\n                    >\r\n                      <MenuItem value=\"\">\r\n                        <em>Thành phố</em>\r\n                      </MenuItem>\r\n                      {\r\n                        cities.map((city, index)=>{\r\n                          return <MenuItem key={index} value={city}>{city}</MenuItem>\r\n                        }\r\n                      )\r\n                      }\r\n                      {/* <MenuItem value={'TpHCM'}>TpHCM</MenuItem>\r\n                      <MenuItem value={'Hà Nội'}>Hà Nội</MenuItem>\r\n                      <MenuItem value={'An Giang'}>An Giang</MenuItem> */}\r\n                    </Select>\r\n                    <Button variant=\"outlined\" color=\"primary\" className={classes.button} onClick={this.checkAccquainted}>\r\n                      Send\r\n                    </Button>\r\n                  </FormControl>\r\n\r\n                  \r\n                </form>\r\n              </Grid>\r\n            </Paper>\r\n            <br/>\r\n            {cities.length === 0 && <NoCity></NoCity>}\r\n            {accquainted === true ? <ImgMediaCard name={this.state.name}></ImgMediaCard> : null }\r\n            {accquainted === false ? <NoInfo></NoInfo> : null }\r\n            \r\n          </div>\r\n\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// export default App;\r\nApp.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles(theme))(App);","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/myAvatar.12e6b97d.png\";"],"sourceRoot":""}