{"version":3,"sources":["components/ImgMediaCard.js","components/NoInfo.js","db.js","App.js","serviceWorker.js","index.js","myAvatar.png"],"names":["withStyles","card","maxWidth","media","objectFit","props","classes","name","react_default","a","createElement","Card_default","className","CardActionArea_default","CardMedia_default","component","height","image","myAvatar","title","CardContent_default","Typography_default","gutterBottom","variant","NoInfo","cities","database","location","App","state","accquainted","handleChange","event","_this","setState","Object","defineProperty","target","value","checkAccquainted","_this$state","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","person","toLocaleLowerCase","console","log","err","return","this","root","wrapper","Paper_default","paper","Grid_default","container","wrap","spacing","onSubmit","handleFormSubit","form","FormControl_default","formControl","TextField_default","label","margin","onChange","Select_default","id","displayEmpty","MenuItem_default","map","city","index","key","Button_default","color","button","onClick","components_ImgMediaCard","components_NoInfo","Component","theme","overflow","padding","concat","unit","width","minWidth","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.d1b0c11b.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport myAvatar from '../myAvatar.png';\r\n\r\nconst styles = {\r\n  card: {\r\n    maxWidth: 400,\r\n  },\r\n  media: {\r\n    // ⚠️ object-fit is not supported by IE11.\r\n    objectFit: 'cover',\r\n  },\r\n};\r\n\r\nfunction ImgMediaCard(props) {\r\n  const { classes, name } = props;\r\n  return (\r\n    <Card className={classes.card}>\r\n      <h4>Hello {name}! Nice to meet you</h4>\r\n      <CardActionArea>\r\n  \r\n        <CardMedia\r\n          component=\"img\"\r\n          className={classes.media}\r\n          height=\"400\"\r\n          image={myAvatar}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"headline\" component=\"h2\">\r\n            Vu Nguyen\r\n          </Typography>\r\n          <Typography component=\"p\">\r\n            Country : Finland\r\n          </Typography>\r\n          <Typography component=\"p\">\r\n            Zalo : <strong>+358 442048050</strong>\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      \r\n    </Card>\r\n  );\r\n}\r\n\r\nImgMediaCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ImgMediaCard);","import React from 'react';\r\n\r\n\r\nfunction NoInfo(props){\r\n    return (\r\n        <div>\r\n            <h4>Xin lỗi ! Bạn không nằm trong danh sách được biết số đt của mình. Vui lòng gõ có dấu đúng tên và thành phố.</h4>\r\n            <h4>Ví dụ: </h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoInfo;","export const cities = [\r\n    'TpHCM',\r\n    'Đà Nẵng',\r\n    'Nha Trang',\r\n    'Hà Nội',\r\n    'An Giang',\r\n    'Cần Thơ',\r\n    'Phú Yên',\r\n    'Hải Phòng',\r\n    'Bắc Ninh',\r\n    'Huế',\r\n    'Mỹ Tho',\r\n    'Đà Lạt',\r\n    'Đak Nông',\r\n    'Bà Rịa Vũng Tàu',\r\n    'Biên Hòa',\r\n    'Tuyên Quang',\r\n    'Nghệ An',\r\n]\r\n\r\n\r\nexport const database = [\r\n    {name: 'HuyềnKelly', location: 'Tuyên Quang'},\r\n    {name: 'Huyền', location: 'Nghệ An'},\r\n    {name: 'Thanh Trúc', location: 'Phú Yên'},\r\n    {name: 'Trang', location: 'Đak Nông'},\r\n  ];","import React, { Component } from 'react';\nimport './App.css';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\n\nimport ImgMediaCard from './components/ImgMediaCard';\nimport NoInfo from './components/NoInfo';\nimport {cities, database} from './db';\n\nconst styles = theme => ({\n  root: {\n    overflow: 'hidden',\n    padding: `0 ${theme.spacing.unit * 3}px`,\n  },\n  wrapper: {\n    maxWidth: 400,\n    margin: \"0 auto\",\n  },\n  paper: {\n    margin: theme.spacing.unit,\n    padding: theme.spacing.unit * 2,\n  },\n  form: {\n    width: \"100%\",\n  },\n  formControl: {\n    minWidth: 120,\n    margin: \"0 auto\",\n  },\n  button: {\n    margin: theme.spacing.unit,\n  },\n});\n\nclass App extends Component {\n  state={\n    name: '',\n    location: '',\n    accquainted: null,\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  checkAccquainted = () => {\n    const {name, location} = this.state;\n    let accquainted = null;\n    for(let person of database){\n      if(name.toLocaleLowerCase === person.name.toLocaleLowerCase && location === person.location) {\n        console.log(\"I know this person\");\n        accquainted = true;\n      }\n    }\n\n    if(accquainted){\n      this.setState({accquainted}) ;\n    } else {\n      this.setState({accquainted: false});\n    }\n\n  }\n\n  render() {\n    const { classes } = this.props;\n    const {accquainted} = this.state ;\n    return (\n      <div className=\"App\">\n        <header className=\"\">\n          <h4>Bạn hãy điền vào thông tin, nếu đúng thì mình sẽ đưa số đt của mình cho bạn</h4>\n        </header>\n        <main className={classes.root}>\n          <div className={classes.wrapper}>\n            <Paper className={classes.paper}>\n              <Grid container wrap=\"nowrap\" spacing={16}>\n                {/* <Input value={this.state.name} onChange={(event)=>{this.handleInputChange(event)}}/> */}\n                <form onSubmit={this.handleFormSubit} className={classes.form}>\n                  <FormControl className={classes.formControl}>\n                    <TextField value={this.state.name} name=\"name\" label=\"Tên của bạn\" margin=\"normal\" onChange={this.handleChange}></TextField>\n                    <Select\n                      value={this.state.location}\n                      onChange={this.handleChange}\n                      name=\"location\"\n                      id=\"location\"\n                      displayEmpty\n                    >\n                      <MenuItem value=\"\">\n                        <em>Thành phố</em>\n                      </MenuItem>\n                      {\n                        cities.map((city, index)=>{\n                          return <MenuItem key={index} value={city}>{city}</MenuItem>\n                        }\n                      )\n                      }\n                      {/* <MenuItem value={'TpHCM'}>TpHCM</MenuItem>\n                      <MenuItem value={'Hà Nội'}>Hà Nội</MenuItem>\n                      <MenuItem value={'An Giang'}>An Giang</MenuItem> */}\n                    </Select>\n                    <Button variant=\"outlined\" color=\"primary\" className={classes.button} onClick={this.checkAccquainted}>\n                      Send\n                    </Button>\n                  </FormControl>\n\n                  \n                </form>\n              </Grid>\n            </Paper>\n            <br/>\n            {accquainted === true ? <ImgMediaCard name={this.state.name}></ImgMediaCard> : null }\n            {accquainted === false ? <NoInfo></NoInfo> : null }\n            \n          </div>\n\n        </main>\n      </div>\n    );\n  }\n}\n\n// export default App;\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/myAvatar.12e6b97d.png\";"],"sourceRoot":""}